import pyaudio,wave,sys
import socket,threading

def listen():
        data = s.recv(2048)
        print(f"incoming data length:{len(data)}")
        audiodata = outputstream.write(data)


#start listening
name = "WTF01"
FORMAT = "UTF-8"
port = 8888
serverip = "106.52.154.11"
clientip = socket.gethostbyname(socket.gethostname()) # get host ip
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#--------------------read public key provided


pin = pyaudio.PyAudio()
pout = pyaudio.PyAudio()
#rate is numbers of samples collected per second
#each sample is 2 bytes for 16bit format


s.connect((serverip,port))
#------------

inputstream = pin.open(format=pyaudio.paInt16, channels=1, rate=44100, input=True, frames_per_buffer=1024)
outputstream = pout.open(format=pyaudio.paInt16, channels=1, rate=44100, output=True, frames_per_buffer=1024)

frames=[]
sample = True
try:
    while True:
        data = inputstream.read(1024,exception_on_overflow = False)
        s.send(data)
        print(f"data sent,length:{len(data)}")
        print("waiting for data...")
        t=threading.Thread(target=listen)
        t.start()
        if sample ==True:
            #print(f"raw sample:{data}")
            print(f"data length:{len(data)}")
            #print(f"dec sample:{decdata}")
            #print(f"raw data length:{len(data)}")

            sample = False
            
except KeyboardInterrupt:
    pass

outputstream.stop_stream()
outputstream.close()
p.terminate()



"""
sound_file=wave.open("a recording.wav","wb")
sound_file.setnchannels(2)
sound_file.setsampwidth(p.get_sample_size(pyaudio.paInt16))
sound_file.setframerate(176400)
sound_file.writeframes(b''.join(frames))
sound_file.close()
"""

